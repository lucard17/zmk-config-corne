/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        CARS_COMBO {
            bindings = <&kp CAPS>;
            key-positions = <16 19>;
            layers = <0>;
        };

        lshift_lctrl {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <16 15>;
        };

        rshift_rctrl {
            bindings = <&kp RS(RCTRL)>;
            key-positions = <19 20>;
        };

        rshift_ralt {
            bindings = <&kp LS(LALT)>;
            key-positions = <16 14>;
        };

        lshift_lalt {
            bindings = <&kp RA(RIGHT_SHIFT)>;
            key-positions = <19 21>;
        };

        bt_layer_combo {
            bindings = <&mo 5>;
            key-positions = <37 38>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <50>;
            bindings = <&kp>, <&kp>;
        };

        alts_hrm: alts_hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <14 21>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE      &kp Q                 &kp W                 &kp E             &kp R          &kp T          &kp Y        &kp U               &kp I         &kp O             &kp P          &kp BSPC
&hrm LSHFT TAB  &alts_hrm LEFT_WIN A  &alts_hrm LEFT_ALT S  &hrm LS(LCTRL) D  &hrm LSHIFT F  &kp G          &kp H        &hrm RIGHT_SHIFT J  &hrm RCTRL K  &alts_hrm RALT L  &kp SEMICOLON  &kp SQT
&kp LCTRL       &kp Z                 &kp X                 &kp C             &kp V          &kp B          &kp N        &kp M               &kp COMMA     &kp DOT           &kp FSLH       &kp ENTER
                                                            &kp LALT          &mo 1          &lt 2 SPACE    &lt 2 SPACE  &mo 1               &kp LEFT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3     &kp N4          &kp N5            &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp BACKSPACE
&trans     &kp LGUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &kp UP_ARROW      &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &kp DEL
&trans     &none     &none     &none      &none           &kp DOWN_ARROW    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
                               &trans     &trans          &trans            &trans    &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCLAMATION    &kp AT_SIGN        &kp HASH       &kp DOLLAR     &kp PERCENT    &kp CARET  &kp AMPERSAND      &kp ASTERISK             &kp LEFT_PARENTHESIS          &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp F11    &alts_hrm LWIN F1  &alts_hrm LALT F2  &hrm LCTRL F3  &hrm LSHFT F4  &kp F5         &kp MINUS  &hrm RSHIFT EQUAL  &hrm LCTRL LEFT_BRACKET  &alts_hrm RALT RIGHT_BRACKET  &kp BSLH               &kp DELETE
&kp F12    &kp F6             &kp F7             &kp F8         &kp F9         &kp F10        &kp UNDER  &kp PLUS           &kp LBRC                 &kp RBRC                      &kp PIPE               &trans
                                                 &trans         &trans         &trans         &trans     &trans             &trans
            >;
        };

        nums_layer {
            bindings = <
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans    &kp EQUAL  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp N0  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &kp UNDER  &kp N1  &kp N2  &kp N3  &trans  &trans
                                &trans          &trans           &trans    &trans     &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp F11  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans   &trans     &trans  &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
